/*! tsParticles v1.39.0 by Matteo Bruni */
!function(t,e){if("object"==typeof exports&&"object"==typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var o=e();for(var n in o)("object"==typeof exports?exports:t)[n]=o[n]}}(window,(function(){return function(){"use strict";var t={d:function(e,o){for(var n in o)t.o(o,n)&&!t.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:o[n]})},o:function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r:function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},e={};t.r(e),t.d(e,{loadExternalBounceInteraction:function(){return M}});class o{constructor(t,e){this.position={x:t,y:e}}}class n extends o{constructor(t,e,o){super(t,e),this.radius=o}contains(t){return e=t,o=this.position,l(e,o).distance<=this.radius;var e,o}intersects(t){const e=t,o=t,n=this.position,i=t.position,s=Math.abs(i.x-n.x),r=Math.abs(i.y-n.y),a=this.radius;if(void 0!==o.radius){return a+o.radius>Math.sqrt(s*s+r+r)}if(void 0!==e.size){const t=e.size.width,o=e.size.height,n=Math.pow(s-t,2)+Math.pow(r-o,2);return!(s>a+t||r>a+o)&&(s<=t||r<=o||n<=a*a)}return!1}}class i{}i.generatedAttribute="generated",i.randomColorValue="random",i.midColorValue="mid",i.touchEndEvent="touchend",i.mouseDownEvent="mousedown",i.mouseUpEvent="mouseup",i.mouseMoveEvent="mousemove",i.touchStartEvent="touchstart",i.touchMoveEvent="touchmove",i.mouseLeaveEvent="mouseleave",i.mouseOutEvent="mouseout",i.touchCancelEvent="touchcancel",i.resizeEvent="resize",i.visibilityChangeEvent="visibilitychange",i.noPolygonDataLoaded="No polygon data loaded.",i.noPolygonFound="No polygon found, you need to specify SVG url in config.";new Map,new Map,new Map,new Map,new Map,new Map,new Map;class s extends o{constructor(t,e,o,n){super(t,e),this.size={height:n,width:o}}contains(t){const e=this.size.width,o=this.size.height,n=this.position;return t.x>=n.x&&t.x<=n.x+e&&t.y>=n.y&&t.y<=n.y+o}intersects(t){const e=t,o=t,n=this.size.width,i=this.size.height,s=this.position,r=t.position;if(void 0!==o.radius)return o.intersects(this);if(void 0!==e.size){const t=e.size,o=t.width,a=t.height;return r.x<s.x+n&&r.x+o>s.x&&r.y<s.y+i&&r.y+a>s.y}return!1}}class r{constructor(t,e){let o,n;if(void 0===e){if("number"==typeof t)throw new Error("tsParticles - Vector not initialized correctly");const e=t;[o,n]=[e.x,e.y]}else[o,n]=[t,e];this.x=o,this.y=n}static clone(t){return r.create(t.x,t.y)}static create(t,e){return new r(t,e)}static get origin(){return r.create(0,0)}get angle(){return Math.atan2(this.y,this.x)}set angle(t){this.updateFromAngle(t,this.length)}get length(){return Math.sqrt(this.x**2+this.y**2)}set length(t){this.updateFromAngle(this.angle,t)}add(t){return r.create(this.x+t.x,this.y+t.y)}addTo(t){this.x+=t.x,this.y+=t.y}sub(t){return r.create(this.x-t.x,this.y-t.y)}subFrom(t){this.x-=t.x,this.y-=t.y}mult(t){return r.create(this.x*t,this.y*t)}multTo(t){this.x*=t,this.y*=t}div(t){return r.create(this.x/t,this.y/t)}divTo(t){this.x/=t,this.y/=t}distanceTo(t){return this.sub(t).length}getLengthSq(){return this.x**2+this.y**2}distanceToSq(t){return this.sub(t).getLengthSq()}manhattanDistanceTo(t){return Math.abs(t.x-this.x)+Math.abs(t.y-this.y)}copy(){return r.clone(this)}setTo(t){this.x=t.x,this.y=t.y}rotate(t){return r.create(this.x*Math.cos(t)-this.y*Math.sin(t),this.x*Math.sin(t)+this.y*Math.cos(t))}updateFromAngle(t,e){this.x=Math.cos(t)*e,this.y=Math.sin(t)*e}}new WeakSet;function a(t){return"number"==typeof t?t:function(t){const e=u(t);let o=c(t);return e===o&&(o=0),Math.random()*(e-o)+o}(t)}function c(t){return"number"==typeof t?t:t.min}function u(t){return"number"==typeof t?t:t.max}function h(t,e){if(t===e||void 0===e&&"number"==typeof t)return t;const o=c(t),n=u(t);return void 0!==e?{min:Math.min(o,e),max:Math.max(n,e)}:h(o,n)}function y(t){const e=t.random,{enable:o,minimumValue:n}="boolean"==typeof e?{enable:e,minimumValue:0}:e;return a(o?h(t.value,n):t.value)}function l(t,e){const o=t.x-e.x,n=t.y-e.y;return{dx:o,dy:n,distance:Math.sqrt(o*o+n*n)}}function f(t,e,o,n){return r.create(t.x*(o-n)/(o+n)+2*e.x*n/(o+n),t.y)}function d(t,e,o,n,i,s){const r={bounced:!1};return e.min>=n.min&&e.min<=n.max&&e.max>=n.min&&e.max<=n.max&&(t.max>=o.min&&t.max<=(o.max+o.min)/2&&i>0||t.min<=o.max&&t.min>(o.max+o.min)/2&&i<0)&&(r.velocity=i*-s,r.bounced=!0),r}function m(t,e){return t===e||e instanceof Array&&e.indexOf(t)>-1}function x(t,e){return{bottom:t.y+e,left:t.x-e,right:t.x+e,top:t.y-e}}function p(t,e){const o=t.selectors;if(o instanceof Array)for(const n of o)e(n,t);else e(o,t)}function v(t,e){const{x:o,y:n}=t.velocity.sub(e.velocity),[i,s]=[t.position,e.position],{dx:r,dy:a}=l(s,i);if(o*r+n*a>=0){const o=-Math.atan2(a,r),n=t.mass,i=e.mass,s=t.velocity.rotate(o),c=e.velocity.rotate(o),u=f(s,c,n,i),h=f(c,s,n,i),y=u.rotate(-o),l=h.rotate(-o);t.velocity.x=y.x*t.factor.x,t.velocity.y=y.y*t.factor.y,e.velocity.x=l.x*e.factor.x,e.velocity.y=l.y*e.factor.y}}function b(t,e){const o=x(t.getPosition(),t.getRadius()),n=d({min:o.left,max:o.right},{min:o.top,max:o.bottom},{min:e.left,max:e.right},{min:e.top,max:e.bottom},t.velocity.x,y(t.options.bounce.horizontal));n.bounced&&(void 0!==n.velocity&&(t.velocity.x=n.velocity),void 0!==n.position&&(t.position.x=n.position));const i=d({min:o.top,max:o.bottom},{min:o.left,max:o.right},{min:e.top,max:e.bottom},{min:e.left,max:e.right},t.velocity.y,y(t.options.bounce.vertical));i.bounced&&(void 0!==i.velocity&&(t.velocity.y=i.velocity),void 0!==i.position&&(t.position.y=i.position))}class g extends class{constructor(t){this.container=t,this.type=0}}{constructor(t){super(t)}isEnabled(){const t=this.container,e=t.actualOptions,o=t.interactivity.mouse,n=e.interactivity.events,i=n.onDiv;return o.position&&n.onHover.enable&&m("bounce",n.onHover.mode)||function(t,e){return e instanceof Array?!!e.find((e=>e.enable&&m(t,e.mode))):m(t,e.mode)}("bounce",i)}interact(){const t=this.container,e=t.actualOptions.interactivity.events,o=t.interactivity.status===i.mouseMoveEvent,n=e.onHover.enable,s=e.onHover.mode,r=e.onDiv;o&&n&&m("bounce",s)?this.processMouseBounce():function(t,e,o){if(e instanceof Array)for(const n of e){const e=n.mode;n.enable&&m(t,e)&&p(n,o)}else{const n=e.mode;e.enable&&m(t,n)&&p(e,o)}}("bounce",r,((t,e)=>this.singleSelectorBounce(t,e)))}reset(){}processMouseBounce(){const t=this.container,e=10*t.retina.pixelRatio,o=t.interactivity.mouse.position,i=t.retina.bounceModeDistance;o&&this.processBounce(o,i,new n(o.x,o.y,i+e))}singleSelectorBounce(t,e){const o=this.container,i=document.querySelectorAll(t);i.length&&i.forEach((t=>{const i=t,r=o.retina.pixelRatio,a={x:(i.offsetLeft+i.offsetWidth/2)*r,y:(i.offsetTop+i.offsetHeight/2)*r},c=i.offsetWidth/2*r,u=10*r,h="circle"===e.type?new n(a.x,a.y,c+u):new s(i.offsetLeft*r-u,i.offsetTop*r-u,i.offsetWidth*r+2*u,i.offsetHeight*r+2*u);this.processBounce(a,c,h)}))}processBounce(t,e,o){const i=this.container.particles.quadTree.query(o);for(const c of i)o instanceof n?v({position:(a=c).getPosition(),radius:a.getRadius(),mass:a.getMass(),velocity:a.velocity,factor:r.create(y(a.options.bounce.horizontal),y(a.options.bounce.vertical))},{position:t,radius:e,mass:e**2*Math.PI/2,velocity:r.origin,factor:r.origin}):o instanceof s&&b(c,x(t,e));var a}}async function M(t){await t.addInteractor("externalBounce",(t=>new g(t)))}return e}()}));